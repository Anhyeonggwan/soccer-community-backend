# compose.prod.yml
version: '3.8'
services:
  api:
    image: ${IMAGE_NAME} # cd.yml에서 주입될 환경 변수
    ports:
      - "8080:8081"
    restart: always
    environment:
                - SPRING_PROFILES_ACTIVE=prod # 운영 프로파일 활성화
                - SPRING_DATASOURCE_URL=${DB_URL}
                - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
                - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
                - SPRING_REDIS_HOST=redis
                - SPRING_REDIS_PORT=6379
                - JWT_SECRET=${JWT_SECRET}
                - MAIL_USERNAME=${MAIL_USERNAME}
                - MAIL_PASSWORD=${MAIL_PASSWORD}
                - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
                - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
                - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
                - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
                - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}
  mysql:
    image: mysql:8.0
    container_name: soccer-community-mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 10

  redis:
    image: redis:latest
    container_name: soccer-community-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 10

volumes:
  mysql-data:
  redis-data: